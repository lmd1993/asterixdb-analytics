<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<artifactId>pregelix-core</artifactId>
	<packaging>jar</packaging>
	<name>pregelix-core</name>

	<parent>
		<groupId>edu.uci.ics.hyracks</groupId>
		<artifactId>pregelix</artifactId>
		<version>0.2.2</version>
	</parent>


	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	</properties>

	<build>
		<plugins>
			<plugin>
				<artifactId>maven-jar-plugin</artifactId>
				<executions>
					<execution>
						<id>balancer</id>
						<goals>
							<goal>jar</goal>
						</goals>
						<phase>package</phase>
						<configuration>
							<classifier>balancer</classifier>
							<archive>
								<manifest>
									<MainClass>edu.uci.ics.pregelix.core.util.DataBalancer</MainClass>
								</manifest>
							</archive>
							<includes>
								<include>**/edu/uci/ics/pregelix/core/util/DataBalancer*</include>
							</includes>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-jar-plugin</artifactId>
				<executions>
					<execution>
						<id>generator</id>
						<goals>
							<goal>jar</goal>
						</goals>
						<phase>package</phase>
						<configuration>
							<classifier>generator</classifier>
							<archive>
								<manifest>
									<MainClass>edu.uci.ics.pregelix.core.util.DataGenerator</MainClass>
								</manifest>
							</archive>
							<includes>
								<include>**/edu/uci/ics/pregelix/core/util/DataGenerator*</include>
							</includes>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-jar-plugin</artifactId>
				<executions>
					<execution>
						<id>patch</id>
						<goals>
							<goal>jar</goal>
						</goals>
						<phase>package</phase>
						<configuration>
							<classifier>patch</classifier>
							<finalName>a-hadoop</finalName>
							<includes>
								<include>**/org/apache/**</include>
							</includes>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.0.2</version>
				<configuration>
					<source>1.6</source>
					<target>1.6</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>appassembler-maven-plugin</artifactId>
				<executions>
					<execution>
						<configuration>
							<programs>
								<program>
									<mainClass>org.apache.hadoop.util.RunJar</mainClass>
									<name>pregelix-obselete</name>
								</program>
							</programs>
							<repositoryLayout>flat</repositoryLayout>
							<repositoryName>lib</repositoryName>
						</configuration>
						<phase>package</phase>
						<goals>
							<goal>assemble</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-assembly-plugin</artifactId>
				<version>2.2-beta-5</version>
				<executions>
					<execution>
						<configuration>
							<descriptors>
								<descriptor>src/main/assembly/binary-assembly.xml</descriptor>
							</descriptors>
						</configuration>
						<phase>package</phase>
						<goals>
							<goal>attached</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<version>2.5</version>
				<executions>
					<execution>
						<id>copy-scripts</id>
						<!-- here the phase you need -->
						<phase>package</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>target/appassembler/bin</outputDirectory>
							<resources>
								<resource>
									<directory>src/main/resources/scripts</directory>
								</resource>
							</resources>
						</configuration>
					</execution>
					<execution>
						<id>copy-conf</id>
						<!-- here the phase you need -->
						<phase>package</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>target/appassembler/conf</outputDirectory>
							<resources>
								<resource>
									<directory>src/main/resources/conf</directory>
								</resource>
							</resources>
						</configuration>
					</execution>
					<execution>
						<id>copy-hadoop-patch</id>
						<!-- here the phase you need -->
						<phase>package</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>target/appassembler/lib</outputDirectory>
							<resources>
								<resource>
									<directory>target</directory>
									<includes>
										<include>a-hadoop-patch.jar</include>
									</includes>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.7.2</version>
				<configuration>
					<forkMode>pertest</forkMode>
					<argLine>-enableassertions -Xmx512m -XX:MaxPermSize=300m -Dfile.encoding=UTF-8
						-Djava.util.logging.config.file=src/test/resources/logging.properties</argLine>
					<includes>
						<include>**/*TestSuite.java</include>
						<include>**/*Test.java</include>
					</includes>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-clean-plugin</artifactId>
				<configuration>
					<filesets>
						<fileset>
							<directory>.</directory>
							<includes>
								<include>teststore*</include>
								<include>edu*</include>
								<include>actual*</include>
								<include>build*</include>
								<include>expect*</include>
								<include>ClusterController*</include>
							</includes>
						</fileset>
					</filesets>
				</configuration>
			</plugin>
		</plugins>
	</build>

	<dependencies>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.8.1</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>edu.uci.ics.hyracks</groupId>
			<artifactId>pregelix-api</artifactId>
			<version>0.2.2</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>edu.uci.ics.hyracks</groupId>
			<artifactId>pregelix-dataflow-std</artifactId>
			<version>0.2.2</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>edu.uci.ics.hyracks</groupId>
			<artifactId>pregelix-dataflow</artifactId>
			<version>0.2.2</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>edu.uci.ics.hyracks</groupId>
			<artifactId>hyracks-dataflow-std</artifactId>
			<version>0.2.2</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>edu.uci.ics.hyracks</groupId>
			<artifactId>pregelix-runtime</artifactId>
			<version>0.2.2</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>edu.uci.ics.hyracks</groupId>
			<artifactId>hyracks-api</artifactId>
			<version>0.2.2</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>edu.uci.ics.hyracks</groupId>
			<artifactId>hyracks-dataflow-common</artifactId>
			<version>0.2.2</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>edu.uci.ics.hyracks</groupId>
			<artifactId>hyracks-data-std</artifactId>
			<version>0.2.2</version>
		</dependency>
		<dependency>
			<groupId>org.apache.hadoop</groupId>
			<artifactId>hadoop-core</artifactId>
			<version>0.20.2</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>edu.uci.ics.hyracks</groupId>
			<artifactId>hyracks-storage-am-common</artifactId>
			<version>0.2.2</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>edu.uci.ics.hyracks</groupId>
			<artifactId>hyracks-storage-am-btree</artifactId>
			<version>0.2.2</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>edu.uci.ics.hyracks</groupId>
			<artifactId>hyracks-control-cc</artifactId>
			<version>0.2.2</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>edu.uci.ics.hyracks</groupId>
			<artifactId>hyracks-control-nc</artifactId>
			<version>0.2.2</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.hadoop</groupId>
			<artifactId>hadoop-test</artifactId>
			<version>0.20.2</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>com.kenai.nbpwr</groupId>
			<artifactId>org-apache-commons-io</artifactId>
			<version>1.3.1-201002241208</version>
			<type>nbm</type>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>edu.uci.ics.hyracks.examples</groupId>
			<artifactId>hyracks-integration-tests</artifactId>
			<version>0.2.1</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.sun.jersey</groupId>
			<artifactId>jersey</artifactId>
			<version>0.8-ea</version>
			<type>jar</type>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>3.0.1</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>edu.uci.ics.hyracks</groupId>
			<artifactId>hyracks-ipc</artifactId>
			<version>0.2.2</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>
	</dependencies>
</project>
